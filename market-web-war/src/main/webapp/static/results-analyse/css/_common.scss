@charset "utf-8";
@import "./reset";
@import "./sprites";
@import "./flex";
// $mainRed: #D80C18;
$mainRed:#108EE9;
$mainWidth: 80%;
$topHeight: 15%;
[class^="i-"],
[class^="icon-"] {
    display: inline-block;
    vertical-align: auto;
}
body,
html {
    min-width: 320px;
}
.hide {
    display: none;
}
.v-hide {
    visibility: hidden;
}
.fl {
    float: left;
}
.fr {
    float: right;
}
//顶部header
.header-title {
    width: 100%;
    // height: 40px;
    line-height: 40px;
    font-size: 18px;
    color: #fff;
    background-color: $mainRed;
    text-align: center;
    position: relative;
    .icon-go-back {
        position: absolute;
        top: 5px;
        left: 10px;
    }
}
#toast {
    position: fixed;
    top: 200px;
    left: 50%;
    min-width: 200px;
    margin-left: -120px;
    background-color: #333;
    color: #fff;
    padding: 10px;
    border-radius: 3px;
    text-align: center;
    opacity: 0.9;
    -webkit-transition: opacity 0.5s ease-out;
    transition: opacity 0.5s ease-out;
    font-size: 14px;
}
//===================================================
//====================常用动画========================
//===================================================
@mixin transform($value) {
    -webkit-transform: $value;
    transform: $value;
    -moz-transform: $value;
    -ms-transform: $value;
}
@mixin transition($value) {
    -webkit-transition: $value;
    transition: $value;
    -moz-transition: $value;
    -ms-transition: $value;
}
@mixin animation($animationName) {
    -webkit-animation: $animationName;
    -ms-animation: $animationName;
    -moz-animation: $animationName;
    -o-animation: $animationName;
    animation: $animationName;
}
@mixin keyframes($animationName) {
     @-webkit-keyframes #{$animationName}{
        @content;
    }
    @-moz-keyframes #{$animationName} {
         @content;
    }
    @-o-keyframes #{$animationName} {
         @content;
    }
    @-ms-keyframes #{$animationName} {
         @content;
    }
    @keyframes #{$animationName} {
         @content;
    }
}
/* 箭头
arrow(direction,
size,
color);
*/
@mixin arrow($direction, $size, $color) {
    width: 0;
    height: 0;
    line-height: 0;
    font-size: 0;
    overflow: hidden;
    border-width: $size;
    cursor: pointer;
    @if $direction == top {
        border-style: dashed dashed solid dashed;
        border-color: transparent transparent $color transparent;
        border-top: none;
    }
    @else if $direction == bottom {
        border-style: solid dashed dashed dashed;
        border-color: $color transparent transparent transparent;
        border-bottom: none;
    }
    @else if $direction == right {
        border-style: dashed dashed dashed solid;
        border-color: transparent transparent transparent $color;
        border-right: none;
    }
    @else if $direction == left {
        border-style: dashed solid dashed dashed;
        border-color: transparent $color transparent transparent;
        border-left: none;
    }
}
// flex布局
.flex-block {
    @include flex-wrap(wrap);
    @include display-flex;
    .col-1 {
        @include flex(1);
    }
    .col-2 {
        @include flex(2);
    }
    .col-3 {
        @include flex(3);
    }
    .col-4 {
        @include flex(4);
    }
    .col-5 {
        @include flex(5);
    }
    .col-6 {
        @include flex(6);
    }
}
.flex-inline {
    @include display-inline-flex;
    .col-1 {
        @include flex(1);
    }
    .col-2 {
        @include flex(2);
    }
    .col-3 {
        @include flex(3);
    }
    .col-4 {
        @include flex(4);
    }
    .col-5 {
        @include flex(5);
    }
    .col-6 {
        @include flex(6);
    }
}
